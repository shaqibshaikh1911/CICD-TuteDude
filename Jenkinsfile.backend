pipeline {
  agent any
  options { ansiColor('xterm') }
  environment {
    VENV = "${WORKSPACE}/.venv"
    APP_DIR = "backend"
    PM2_NAME = "flask-app"
    FLASK_BIND = "0.0.0.0:5000"
  }
  stages {
    stage('Checkout') {
      steps {
        // add credentialsId: 'github-token' if the repo is private
        git url: 'https://github.com/shaqibshaikh1911/CICD-TuteDude.git', branch: 'main'
      }
    }
    stage('Python venv & Deps') {
      steps {
        sh '''
          python3 -m venv "$VENV"
          . "$VENV/bin/activate"
          pip install --upgrade pip
          if [ -f "${APP_DIR}/requirements.txt" ]; then
            pip install -r "${APP_DIR}/requirements.txt"
          fi
        '''
      }
    }
    stage('Tests (optional)') {
      when { expression { return fileExists("${APP_DIR}/tests") || fileExists("${APP_DIR}/pytest.ini") } }
      steps {
        sh '''
          . "$VENV/bin/activate"
          pytest -q ${APP_DIR} || true
        '''
      }
    }
    stage('Deploy via PM2') {
      steps {
        sh '''
          . "$VENV/bin/activate"
          if pm2 describe "${PM2_NAME}" > /dev/null; then
            pm2 reload "${PM2_NAME}"
          else
            cd "${APP_DIR}"
            if command -v gunicorn >/dev/null 2>&1; then
              pm2 start "gunicorn -w 2 -b ${FLASK_BIND} app:app" --name "${PM2_NAME}"
            else
              pm2 start "python3 app.py" --name "${PM2_NAME}"
            fi
          fi
          pm2 save
        '''
      }
    }
  }
  post { always { sh 'pm2 jlist || true' } }
}
